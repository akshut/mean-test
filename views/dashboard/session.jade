mixin session(session)
  li.session(id=session._id)
    p.name Patient
    img.avatar(src="//lorempixel.com/125/125", alt="patient", width="50", height="50", title="Begin Meeting")
    span.chat-notification
      i.glyphicon.glyphicon-comment(title="Begin Chat")
    .chat

    script.
      (function(session) {

        var subscriber = null

        function sessionConnectedHandler(event) {
          subscribeToStreams(event.streams)
        }

        function subscribeToStreams(streams) {
          for (var i = 0; i < streams.length; i++) {
            var stream = streams[i];
            if (stream.connection.connectionId
                   != tokSession.connection.connectionId) {

                var $subscriber = $('<div/>', {
                  class: 'patient-video', 
                  id: 'video-' + session._id
                }).addClass('invisible').appendTo('#theirPublisherDiv')

                subscriber = tokSession.subscribe(
                                    stream
                                  , 'video-' + session._id
                                  , {
                                      subscribeToVideo: false
                                    , subscribeToAudio: false
                                    }
                                 );
            }
          }
        }

        function streamCreatedHandler(event) {
          subscribeToStreams(event.streams);
        }

        var tokSession = TB.initSession(session.sessionId);


        tokSession.connect(session.API_KEY, session.token);

        tokSession.on("sessionConnected",
                                 sessionConnectedHandler);

        tokSession.on("streamCreated",
                                 streamCreatedHandler);

        var avatar = [];

        tokSession.on('signal:image-begin', function() {
          avatar = [];
          console.log("image commin");
        })

        tokSession.on('signal:image-chunk', function(e) {
          avatar[e.data.index] = e.data.img
        })

        tokSession.on('signal:image-end', function() {
          $('li.session#' + session._id + ' img')
          .attr('src', 'data:image/png;base64,' + avatar.join(''))
        })

        tokSession.on('signal:name', function(e) {
          $('li.session#' + session._id + ' p')
          .text(e.data.name)
        })

        var $chatNotification = $('li.session#' + session._id + ' span.chat-notification')
          , $chat = $('li.session#' + session._id + ' .chat')

        
        var chatTemplate = templatizer.public.chat.chat('doctor', tokSession)

        $chat.html(chatTemplate)

        tokSession.on('signal:chat-patient', function(e) {
          $chatNotification.find('i').css('color', 'red')
        })

        $chat.click(function() {
          $chatNotification.find('i').css('color', 'black')
        })

        function openChat() {
          //- $chatNotification.find('i').removeClass('fa-comment').addClass('fa-comment-o')
          $chat.addClass('open')
        }

        function closeChat() {
          //- $chatNotification.find('i').addClass('fa-comment').removeClass('fa-comment-o')
          $chat.removeClass('open')
        }

        $chatNotification.click(function() {
          console.log("YOLO")
          $chatNotification.find('i').css('color', 'black')
          openChat()
        })

        $(document).mouseup(function (e) {
          if (!$chat.is(e.target) // if the target of the click isn't the container...
            && $chat.has(e.target).length === 0){ // ... nor a descendant of the container
              closeChat()
          }
        });

        //Handle initiating of conference call
        $('li.session#' + session._id + ' img.avatar').click(function() {
          var publisher = TB.initPublisher( session.API_KEY, 'myPublisherDiv'
                                        , { height: "135px", width: "180px" })
          subscriber.subscribeToVideo(true)
          subscriber.subscribeToAudio(true)
          window.activateSession(tokSession, $('#video-' + session._id), subscriber, publisher)
        })

      })(!{JSON.stringify(session)})
